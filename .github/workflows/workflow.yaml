name: dandori_action
on:
  pull_request:
    types: [opened, synchronize, reopened, closed]
  issue_comment:
    types: [created]

jobs:
  pr-comment:
    if: github.event.issue.pull_request
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v3
        id: get-pr
        with:
          script: |
            const request = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            }
            core.info(`Getting PR #${request.pull_number} from ${request.owner}/${request.repo}`)
            try {
              const result = await github.pulls.get(request)
              return result.data
            } catch (err) {
              core.setFailed(`Request failed with error ${err}`)
            }
      - uses: actions/checkout@v2
        with:
          ref: ${{ fromJSON(steps.get-pr.outputs.result).merge_commit_sha }}
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - run: pip install .
      - run: echo '${{ secrets.PYPIRC }}' > .pypirc
      - run: dandori -vvvv
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  other:
    if: "!github.event.issue.pull_request"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - run: pip install .
      - run: echo '${{ secrets.PYPIRC }}' > .pypirc
      - run: dandori -vvvv
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
